// This file contains a list of SqlLogicTest which I believe are
// buggy when using MySQL.  Each line is a statement or query that is buggy, without
// newlines.  Lines starting with // are ignored.
//
// Calcite cannot parse this MySQL query due to DIV and SIGNED
// random/groupby/slt_good_12.test
SELECT - col0 * - - col2 * + col2 DIV - col2 AS col0 FROM tab0 cor0 GROUP BY col0, col2
SELECT + col1 DIV ( - col1 ) - - col1 FROM tab2 GROUP BY col1, col2, col1
SELECT DISTINCT - CAST( + - CAST( + 0 AS SIGNED ) AS SIGNED ) AS col0 FROM tab2 AS cor0 GROUP BY col1, col2
SELECT ALL + COALESCE ( + 23, - col2 DIV - 95 ) FROM tab2 WHERE NOT 84 IS NULL GROUP BY col2
SELECT DISTINCT col1 col2 FROM tab2 GROUP BY col1, col1, col2 HAVING NOT - col2 > CAST( + 20 AS SIGNED )
SELECT ALL + + 67 FROM tab2 cor0 GROUP BY col1, col2 HAVING NOT NULL = + CAST( NULL AS SIGNED )
SELECT DISTINCT - 44 + - col1 + + col1, - col1 + - col1 * col1 AS col1 FROM tab0 AS cor0 GROUP BY col1, col1
SELECT ( col0 ) DIV - - col0 + - col2 col2 FROM tab2 AS cor0 GROUP BY col0, col2
// Calcite cannot parse this query
// test/random/aggregates/slt_good_12.test
SELECT DISTINCT - 15 - + - 2 FROM ( tab0 AS cor0 CROSS JOIN tab1 AS cor1 )
// MySQL allows updates/deletes in some views
// test/evidence/slt_lang_createview.test
DELETE FROM view1 WHERE x>0
UPDATE view1 SET x=2
// test/evidence/slt_lang_droptable.test
DROP INDEX t1i1;
// Calcite parses x'303132' as a BINARY objects and fails typechecking
// with an error: Values passed to IN operator must have compatible types
SELECT x'303132' IN (SELECT * FROM t1)
SELECT x'303132' NOT IN (SELECT * FROM t1)
// These don't match MySQL behaviors
// test/evidence/slt_lang_droptrigger.test
CREATE TRIGGER t1r1 UPDATE ON t1 BEGIN SELECT 1; END;
DROP TRIGGER t1r1
// test/evidence/slt_lang_createtrigger.test
CREATE TRIGGER t1r2 DELETE ON t1 BEGIN SELECT 1; END;
CREATE TRIGGER t1r3 INSERT ON t1 BEGIN SELECT 1; END;
CREATE TRIGGER t1r4 UPDATE ON t1 BEGIN SELECT 1; END;
CREATE TRIGGER t1r5 AFTER DELETE ON t1 BEGIN SELECT 1; END;
CREATE TRIGGER t1r6 AFTER INSERT ON t1 BEGIN SELECT 1; END;
CREATE TRIGGER t1r7 AFTER UPDATE ON t1 BEGIN SELECT 1; END;
CREATE TRIGGER t1r8 BEFORE DELETE ON t1 BEGIN SELECT 1; END;
CREATE TRIGGER t1r9 BEFORE INSERT ON t1 BEGIN SELECT 1; END;
CREATE TRIGGER t1r10 BEFORE UPDATE ON t1 BEGIN SELECT 1; END;
DROP TRIGGER t1r1
DROP TRIGGER t1r2
DROP TRIGGER t1r3
DROP TRIGGER t1r4
DROP TRIGGER t1r5
DROP TRIGGER t1r6
DROP TRIGGER t1r7
DROP TRIGGER t1r8
DROP TRIGGER t1r9
DROP TRIGGER t1r10
